Author: John Jacobsen, NPX Designs, Inc. john@mail.npxdesigns.com

This project consists of the very first steps of a port of Clojure to
Python.  At the moment it is interpreted and does very little (see
file test_lisp.py for examples).

It was inspired in part by my recent fascination with Clojure, my
long-standing love of Python, and a recent compiler class[1] I took.
It may or may not actually go anywhere, or wind up being faithful to
the existing Clojure language family (Clojure on the JVM,
ClojureScript, clojure-clr, ...).  Mostly it's just to see how far I
can take it.  I probably shouldn't even call it PyClojure, but the
name serves to indicate my intentions....

[1] http://www.dabeaz.com/chicago/compiler.html

WHY DO THIS?

1. I like Python
2. I like Clojure and want to learn it better
3. I like compilers and interpreters and want to learn more about those
4. I find the long JVM startup time irritating
5. I can't find evidence that anyone else is doing this at this time.

Feel free to join in!

NEXT STEPS

- Vectors
- Keywords
- Maps
- Sets
- Lambda / fn / (# ...)

DONE

- Parsing and storage of trees of lists
- Def. and simple evaluation
